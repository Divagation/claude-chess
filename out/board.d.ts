import { Piece, Color, GameState, Move } from "./types";
export declare class ChessBoard {
    private board;
    private gameState;
    constructor();
    private createInitialBoard;
    private placePieceRow;
    getBoard(): (Piece | undefined)[][];
    getGameState(): GameState;
    selectSquare(row: number, col: number): void;
    private isValidMove;
    private getValidMoves;
    private doesntPutKingInCheck;
    private getPawnMoves;
    private getKnightMoves;
    private getBishopMoves;
    private getRookMoves;
    private getQueenMoves;
    private getKingMoves;
    private getDirectionalMoves;
    private makeMove;
    isLegalMove(fromRow: number, fromCol: number, toRow: number, toCol: number): boolean;
    getPossibleMovesForColor(color: Color): Move[];
    private findKing;
    private isSquareAttackedByColor;
    private getValidMovesForPiece;
    isInCheck(color: Color): boolean;
    isInCheckmate(color: Color): boolean;
    private copyBoardForSimulation;
    private findKingInBoard;
    private isSquareAttackedByColorInBoard;
    private getValidMovesForPieceInBoard;
    private getPawnMovesInBoard;
    private getKnightMovesInBoard;
    private getBishopMovesInBoard;
    private getRookMovesInBoard;
    private getQueenMovesInBoard;
    private getKingMovesInBoard;
    private getDirectionalMovesInBoard;
}
